name: Checks

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]

concurrency:
  group: ${{ github.head_ref || github.ref_name }}
  cancel-in-progress: false

jobs:
  markdownlint:
    runs-on: ubuntu-latest
    steps:
    - name: check out code
      uses: actions/checkout@v3

    - name: install dependencies
      run: npm install

    - name: run markdownlint
      run: make markdownlint

  yamllint:
    runs-on: ubuntu-latest
    steps:
    - name: check out code
      uses: actions/checkout@v3

    - uses: actions/setup-python@v4
      with:
        python-version: '3.x'

    - name: install yamllint
      run: make install-yamllint

    - name: run yamllint
      run: yamllint . -f github

  misspell:
    runs-on: ubuntu-latest
    steps:
    - name: check out code
      uses: actions/checkout@v3

    - name: run misspell
      run: make misspell

  docfx:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 6.0.x

    - name: install docfx
      run: dotnet tool update -g docfx --version "3.0.0-*" --add-source https://docfx.pkgs.visualstudio.com/docfx/_packaging/docs-public-packages/nuget/v3/index.json

    - name: run docfx
      run: docfx build --dry-run

  markdownlinkcheck:
    name: markdownlinkcheck
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Run link check
      uses: gaurav-nelson/github-action-markdown-link-check@v1
      with:
        use-quiet-mode: 'no'
        use-verbose-mode: 'yes'
        config-file: '.github/.mlc_config.json'

  sanity:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: run sanitycheck.py
      run: python3 ./internal/tools/sanitycheck.py

  build-container-image:
    runs-on: ubuntu-latest
    needs:
    - markdownlint
    - yamllint
    - misspell
    - docfx
    - markdownlinkcheck
    - sanity
    strategy:
      fail-fast: false
      matrix:
        service:
        - adservice
        - cartservice
        - checkoutservice
        - currencyservice
        - emailservice
        - featureflagservice
        - frontend
        - loadgenerator
        - paymentservice
        - productcatalogservice
        - recommendationservice
        - shippingservice

    steps:
    - uses: actions/checkout@v3

    - name: Log in to the Container registry
      uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build ${{ matrix.service }} Image
      run: docker compose build ${{ matrix.service }}

    - name: Push ${{ matrix.service }} Image
      if: github.ref == 'refs/heads/main'
      run: |
        source="$(docker images --format "{{.Repository}}:{{.Tag}}" | grep ${{ matrix.service }})"
        commit_short=$(git rev-parse --short HEAD)
        docker tag "$source" "ghcr.io/observiq/demo-${{ matrix.service }}:latest"
        docker tag "$source" "ghcr.io/observiq/demo-${{ matrix.service }}:${commit_short}"
        docker push "ghcr.io/observiq/demo-${{ matrix.service }}:latest"
        docker push "ghcr.io/observiq/demo-${{ matrix.service }}:${commit_short}"
