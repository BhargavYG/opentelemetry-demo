# Copyright The OpenTelemetry Authors
# SPDX-License-Identifier: Apache-2.0

version: '3.9'
x-default-logging: &logging
  driver: "json-file"
  options:
    max-size: "5m"
    max-file: "2"

services:
  # ******************
  # Core Demo Services
  # ******************

  # AdService
  adservice:
    environment:
      - FEATURE_FLAG_GRPC_SERVICE_ADDR
    depends_on:
      featureflagservice:
        condition: service_started

  # Cart service
  cartservice:
    environment:
      - FEATURE_FLAG_GRPC_SERVICE_ADDR
    depends_on:
      featureflagservice:
        condition: service_started

  # Feature Flag service
  featureflagservice:
    image: ${IMAGE_NAME}:${IMAGE_VERSION}-featureflagservice
    container_name: feature-flag-service
    build:
      context: ./
      dockerfile: ./src/featureflagservice/Dockerfile
      cache_from:
        - ${IMAGE_NAME}:${IMAGE_VERSION}-featureflagservice
    deploy:
      resources:
        limits:
          memory: 175M
    restart: unless-stopped
    ports:
      - "${FEATURE_FLAG_SERVICE_PORT}"                                  # Feature Flag Service UI
      - "${FEATURE_FLAG_GRPC_SERVICE_PORT}"                             # Feature Flag Service gRPC API
    environment:
      - FEATURE_FLAG_SERVICE_PORT
      - FEATURE_FLAG_GRPC_SERVICE_PORT
      - OTEL_EXPORTER_OTLP_ENDPOINT
      - OTEL_EXPORTER_OTLP_TRACES_PROTOCOL=grpc
      - OTEL_SERVICE_NAME=featureflagservice
      - DATABASE_URL=ecto://ffs:ffs@ffs_postgres:5432/ffs
    healthcheck:
      test: ["CMD", "curl", "-H", "baggage: synthetic_request=true", "-f", "http://localhost:${FEATURE_FLAG_SERVICE_PORT}"]
    depends_on:
      ffs_postgres:
        condition: service_healthy
    logging: *logging

  # productcatalogservice
  productcatalogservice:
    environment:
      - FEATURE_FLAG_GRPC_SERVICE_ADDR
    depends_on:
      featureflagservice:
        condition: service_started

  # recommendationservice
  recommendationservice:
    environment:
      - FEATURE_FLAG_GRPC_SERVICE_ADDR
    deploy:
      resources:
        limits:
          memory: 500M               # This is high to enable supporting the recommendationCache feature flag use case
    depends_on:
      featureflagservice:
        condition: service_started

  # ******************
  # Dependent Services
  # ******************
  # Postgres used by Feature Flag service
  ffs_postgres:
    image: postgres:14
    container_name: postgres
    user: postgres
    deploy:
      resources:
        limits:
          memory: 120M
    restart: unless-stopped
    environment:
      - POSTGRES_USER=ffs
      - POSTGRES_DB=ffs
      - POSTGRES_PASSWORD=ffs
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d ffs -U ffs"]
      interval: 10s
      timeout: 5s
      retries: 5
    logging: *logging